from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from bs4 import BeautifulSoup
import time
import pandas as pd

options = webdriver.ChromeOptions()
# options.add_argument("--headless")
driver = webdriver.Chrome(options=options)
wait = WebDriverWait(driver, 15)

keywords = ['‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå', '‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡πå']
base_url = "https://course.mytcas.com/"
all_data = []

for keyword in keywords:
    print(f"\n‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ keyword: {keyword}")
    driver.get(base_url)

    # ‡∏£‡∏≠‡∏ä‡πà‡∏≠‡∏á search ‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß
    search_input = wait.until(EC.presence_of_element_located((By.ID, "search")))
    search_input.clear()
    for ch in keyword:
        search_input.send_keys(ch)
        time.sleep(0.2)

    # ‡∏£‡∏≠‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    wait.until(EC.visibility_of_element_located((By.ID, "results")))
    time.sleep(1)

    # ‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    li_elements = driver.find_elements(By.XPATH, '//*[@id="results"]/ul/li')
    total_courses = len(li_elements)
    print(f"‡∏û‡∏ö {total_courses} ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö '{keyword}'")

    for i in range(1, total_courses + 1):
        # ‡∏´‡∏≤ element ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏°‡∏≠
        course_xpath = f'//*[@id="results"]/ul/li[{i}]/a'
        link_element = wait.until(EC.element_to_be_clickable((By.XPATH, course_xpath)))
        href = link_element.get_attribute('href')
        print(f"[{i}/{total_courses}] ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£: {href}")

        # ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        ActionChains(driver).move_to_element(link_element).click().perform()

        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ overview
        try:
            # ‡∏£‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• overview
            wait.until(EC.presence_of_element_located((By.XPATH, '//*[@id="overview"]/dl')))
            time.sleep(1)

            # ‚úÖ ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢
            uni_name = driver.find_element(By.XPATH, '//*[@id="root"]/main/div[2]/div/span/span/a').text

            overview_dl_html = driver.find_element(By.XPATH, '//*[@id="overview"]/dl').get_attribute('innerHTML')
            soup = BeautifulSoup(overview_dl_html, 'html.parser')

            # ‡∏™‡∏£‡πâ‡∏≤‡∏á dictionary ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£
            data = {'Keyword': keyword, 'Course URL': href, 'University': uni_name}
            dts = soup.find_all('dt')
            dds = soup.find_all('dd')
            for dt, dd in zip(dts, dds):
                key = dt.get_text(strip=True)
                val = dd.get_text(strip=True)
                data[key] = val
            all_data.append(data)
            print("‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à")

        except:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£")

        # ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏°
        driver.back()

        # ‚úÖ ‡∏û‡∏¥‡∏°‡∏û‡πå keyword ‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ results ‡πÅ‡∏™‡∏î‡∏á
        search_input = wait.until(EC.presence_of_element_located((By.ID, "search")))
        search_input.clear()
        for ch in keyword:
            search_input.send_keys(ch)
            time.sleep(0.2)

        wait.until(EC.visibility_of_element_located((By.ID, "results")))
        time.sleep(1)

print("\nüì¶ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÅ‡∏•‡πâ‡∏ß")
driver.quit()

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå CSV
df = pd.DataFrame(all_data)
df.to_csv("tuition_fees.csv", index=False, encoding="utf-8-sig")
print("üìÅ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà: tuition_fees.csv")